name: "Go"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test_amd64:
    name: ${{ matrix.os }}-${{ matrix.arch }}, Go ${{ matrix.go }}
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest", "windows-latest", "macos-latest" ] # Windows is not supported until wazero implements full async I/O for Windows
        go: [ "1.20.x", "1.21.x" ]
        arch: [ "amd64" ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go }}
    - run: go version
    - name: Go Build
      run: go build -v ./...
    - name: Go Test
      if: ${{ matrix.os != 'windows-latest' }}
      run: go test ./...
    - name: Create skipping notice for Windows
      if: ${{ matrix.os == 'windows-latest' }}
      run: echo "::notice::Testing on Windows target is skipped until async I/O is properly supported."

  
  golangci-lint:
    name: lint
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21.x"
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v1.54
          args: -v --disable structcheck,govet --timeout 5m

